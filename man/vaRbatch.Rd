% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{vaRbatch}
\alias{vaRbatch}
\title{vaRbatch()}
\usage{
vaRbatch(
  all.variants,
  gene.specific.df = NULL,
  remote = TRUE,
  browser = "firefox",
  spliceai.program = FALSE,
  spliceai.reference = NULL,
  spliceai.annotation = NULL,
  spliceai.distance = 1000,
  spliceai.masked = 1,
  provean.program = FALSE,
  provean.sh = NULL,
  print.data.frame = TRUE,
  excel.results = FALSE,
  output.dir = NULL
)
}
\arguments{
\item{all.variants}{a dataframe object containing at least two columns named gene and variant. Variant mus be coding dna sequence and for batch function only works in transcripts stored in IDIBELL database (see vignette)}

\item{gene.specific.df}{By default is NULL, it uses the default parameters described in README. If you would like to change some defaults or include another gene, a template can be downloaded from Github: https://github.com/emunte/Class_variants/tree/main/documents/gen_especific.csv or in the package docs folder and some parameters can be modified taking into account your preferences}

\item{remote}{Logical. Connect remotely to RSelenium server? By default is TRUE and will start Rselenium server.If it is FALSE vaRHC will not connect to insight database.}

\item{browser}{Which browser to start Rselenium server. By default is "firefox" (the recommended). If you do not have firefox installed try either "chrome" or "phantomjs".}

\item{spliceai.program}{Logical. By default is FALSE and it is assumed that SpliceAI program is not installed in your computer. If this parameter is FALSE, the program will only classify substitutions and simple deletion variants taking into account a spliceAI distance of 1000 and will show masked results. If you want to classify other variants please install SpliceAI (https://pypi.org/project/spliceai/) and set to TRUE the parameter.}

\item{spliceai.reference}{Path to the Reference genome hg19 fasta file. Can be downloaded from http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/hg19.fa.gz . By default is NULL and it will only be taken into account if spliceai.program is set to TRUE.}

\item{spliceai.annotation}{Path to gene annotation file. By default it uses the file data(gencode_spliceai_hg19). It must be txt.}

\item{spliceai.distance}{Integer. Maximum distance between the variant and gained/lost splice site (default: 1000)}

\item{spliceai.masked}{Mask scores representing annotated acceptor/donor gain and unannotated acceptor/donor loss (default: 1)}

\item{provean.program}{Logical. By default is FALSE and it is assumed that provean program is not installed in your computer.}

\item{provean.sh}{Path to provean.sh. It will only be considered if provean.program is set to TRUE.}

\item{print.data.frame}{Logical. By defaul is TRUE and the results will be stored in a txt file.}

\item{excel.results}{Logical. By default is FALSE and no excel file would be produced. If TRUE and excel file will be saved}

\item{output.dir}{By default is NULL. output.dir must provide the folder to store the results. If not provided it will be saved in the working directory.}
}
\description{
vaRbatch function allows to perform vaR function in batch. It also returns a logfile.
}
\examples{
all.variants.eg <- data.frame(gene=c("BRCA1", "MLH1"), variant="c.211A>G", "c.1A>G")
all <- vaRbatch( all.variants = all.variants.eg, spliceai.program = TRUE, spliceai.reference= "./hg19.fa", excel.results = TRUE)
lbrary(vaRHC)
data("example_input_vaRbatch")
example_input_vaRbatch[] <- lapply(example_input_vaRbatch, as.character) #convert to character
all <- vaRbatch( all.variants = example_input_vaRbatch, spliceai.program = FALSE, excel.results = TRUE)
}
\author{
Elisabet MuntÃ© Roca
}
